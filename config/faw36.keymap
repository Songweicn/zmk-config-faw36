/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define QWERTY 0
#define NUM 1
#define SYM 2
#define ARROWS 3
#define MEDIA 4
#define NAV 5

&mt {
    tapping-term-ms = <170>;
    flavor = "tap-preferred";
};

/ {
    combos {
        compatible = "zmk,combos";

        lparen {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <13 12>;
        };

        rparen {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <16 17>;
        };

        grave_combo {
            bindings = <&kp GRAVE>;
            key-positions = <22 23>;
        };

        tilde_combo {
            bindings = <&kp TILDE>;
            key-positions = <21 22>;
        };

        lsquare_combo {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <11 12>;
        };

        rsquare_combo {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <17 18>;
        };

        semi_combo {
            bindings = <&kp SEMICOLON>;
            key-positions = <6 7>;
        };

        bslash_combo {
            bindings = <&kp BACKSLASH>;
            key-positions = <26 27>;
        };

        pipe_combo {
            bindings = <&kp PIPE>;
            key-positions = <27 28>;
        };

        colemak {
            bindings = <&to 0>;
            key-positions = <13 16>;
            layers = <8>;
        };

        default {
            bindings = <&to 8>;
            key-positions = <13 16>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp Q           &kp W           &kp F               &kp P             &kp B                 &kp J        &kp L              &kp U                &kp Y            &kp APOS
&mt LEFT_GUI A  &mt LEFT_ALT R  &mt LEFT_CONTROL S  &mt LEFT_SHIFT T  &kp G                 &kp M        &mt RIGHT_SHIFT N  &mt RIGHT_CONTROL E  &mt RIGHT_ALT I  &mt RIGHT_GUI O
&lt 9 Z         &kp X           &kp C               &kp D             &kp V                 &kp K        &kp H              &kp COMMA            &kp DOT          &lt 9 SLASH
                &kp C_MUTE      &lt 5 ESCAPE        &lt 4 SPACE       &mt LEFT_CONTROL TAB  &lt 2 ENTER  &lt 1 BACKSPACE    &lt 6 DELETE         &kp HOME
            >;

            label = "base";
            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PAGE_UP PAGE_DOWN>;
        };

        nav {
            bindings = <
&kp LA(F4)    &kp LC(W)     &kp LC(LS(TAB))   &kp LC(TAB)     &kp INSERT    &none      &kp HOME        &kp UP_ARROW    &kp END          &kp PG_UP
&kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp CAPSLOCK  &none      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN
&trans        &none         &none             &none           &none         &kp RC(Y)  &kp RC(V)       &kp RC(C)       &kp RC(X)        &kp RC(Z)
              &trans        &trans            &trans          &trans        &trans     &trans          &trans          &kp SCROLLLOCK
            >;

            label = "nav";
            sensor-bindings =
                <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>,
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        mouse {
            label = "mouse";
            bindings = <
&kp LA(F4)    &kp LC(W)     &kp LC(LS(TAB))   &kp LC(TAB)     &kp INSERT    &none      &msc SCRL_LEFT  &mmv MOVE_UP    &msc SCRL_RIGHT  &msc SCRL_UP
&kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp CAPSLOCK  &none      &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN
&none         &none         &none             &none           &none         &kp RC(Y)  &kp RC(V)       &kp RC(C)       &kp RC(X)        &kp RC(Z)
              &trans        &trans            &trans          &trans        &trans     &trans          &trans          &kp SCROLLLOCK
            >;

            sensor-bindings =
                <&inc_dec_kp C_BRIGHTNESS_DEC C_BRIGHTNESS_INC>,
                <&inc_dec_kp K_SCROLL_UP K_SCROLL_DOWN>;
        };

        media {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "media";
        };

        num {
            bindings = <
&kp LA(F4)     &kp LC(W)     &kp LC(LS(TAB))   &kp LC(TAB)     &none         &kp LEFT_BRACKET  &kp NUMBER_7  &kp N8        &kp NUMBER_9  &kp RIGHT_BRACKET
&kp LEFT_META  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp CAPSLOCK  &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL
&kp LC(Z)      &kp LC(X)     &kp LC(C)         &kp LC(V)       &kp LC(Y)     &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp BACKSLASH
               &kp C_MUTE    &trans            &trans          &trans        &kp MINUS         &kp PERIOD    &kp NUMBER_0  &kp END
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PG_UP PAGE_DOWN>;

            label = "num";
        };

        sym {
            label = "sym";
            bindings = <
&kp LA(F4)     &kp LC(W)     &kp LC(LS(TAB))   &kp LC(TAB)     &none         &kp LEFT_BRACE  &kp AMPERSAND         &kp STAR               &kp LEFT_PARENTHESIS  &kp RIGHT_BRACE
&kp LEFT_META  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp CAPSLOCK  &kp COLON       &kp DOLLAR            &kp PERCENT            &kp CARET             &kp PLUS
&kp LC(Z)      &kp LC(X)     &kp LC(C)         &kp LC(V)       &kp LC(Y)     &kp TILDE       &kp EXCL              &kp AT                 &kp HASH              &kp PIPE
               &kp C_MUTE    &trans            &trans          &trans        &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp END
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        fun {
            bindings = <
&kp F1  &kp F2                  &kp F3                   &kp F4      &kp F5   &kp CAPSLOCK  &trans        &trans           &trans           &trans
&kp F6  &kp F7                  &kp F8                   &kp F9      &kp F10  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4
&trans  &kp LC(LG(LEFT_ARROW))  &kp LC(LG(RIGHT_ARROW))  &kp F11     &kp F12  &out OUT_USB  &out OUT_BLE  &kp PRINTSCREEN  &kp PAUSE_BREAK  &bt BT_CLR
        &trans                  &bootloader              &sys_reset  &trans   &trans        &sys_reset    &bootloader      &trans
            >;

            label = "fun";
        };

        qwerty {
            bindings = <
&kp Q           &kp W           &kp E               &kp R             &kp T   &kp Y   &kp U              &kp I                &kp O            &kp P
&mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_CONTROL D  &mt LEFT_SHIFT F  &kp G   &kp H   &mt RIGHT_SHIFT J  &mt RIGHT_CONTROL K  &mt RIGHT_ALT L  &mt RIGHT_WIN SEMICOLON
&lt 9 Z         &kp X           &kp C               &kp V             &kp B   &kp N   &kp M              &kp COMMA            &kp DOT          &lt 9 SLASH
                &kp C_MUTE      &trans              &trans            &trans  &trans  &trans             &trans               &kp HOME
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PG_UP PG_DN>;

            label = "qwerty";
        };

        button {
            bindings = <
&trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
&trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(Y)  &kp RC(Y)  &kp RC(V)  &kp RC(C)  &kp RC(X)  &kp RC(Z)
           &trans     &mkp MCLK  &mkp LCLK  &mkp RCLK  &mkp RCLK  &mkp LCLK  &mkp MCLK  &trans
            >;

            label = "button";
        };
    };
};
